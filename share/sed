sed的基本用法、文本块处理及高级应用
1、sed概述
            流式编辑器
            非交互，基于模式匹配过滤及修改文本
            逐行处理，并且将结果输出到屏幕
            可以实现对文本的增、删、改、查、替换、复制、剪切、导入、导出等
            可以写进脚本，vim是不可以的
2、sed命令格式
                前置命令 | sed [选项] "条件指令"
             sed [选项] "条件指令" 文件名称
3、sed选项
            -n:屏蔽默认输出，全部读取，文件所有内容。
            -r:支持扩展正则
            -i：直接修改源文件，默认只是通过内存临时修改文件（很危险，一般不用）
4、条件：可以是行号   可以是/正则/  如果不写，可以默认为所有条件
5、指令：
（1）p:打印
           打印奇数: sed -n '1~2p' /etc/passwd----->其中2P代表多大间隔
           打印偶数: sed -n '2~2p' /etc/passwd----->其中2P代表多大间隔
           打印从第三行开始往下十行: sed -n '3,10p' /etc/passwd
           打印最后一行的行号 '$='
（2）d:删除
            删除所有空行:'/^$/'
            删除不包含root的行:'/root/!d'
            删除最后一行:'$d'
            删除以root的开头的: '/^root/d'
（3）s:替换  （分隔符可以换成#!等）
            替换所有:sed 's/old/new/g'
            删除每一行第一个old: sed 's/old //'
            删除每一行所有old: sed 's/old//g'
            查看所有替换的行： -n 's/old/new/p'
            批量增删注释: '4,7s/^/#/'
            将以an开头的注释去掉:'s/^#an/an/'
调换字符的位置:sed -r 's/^(.)(.)(.*)(.)(.)$/\1\4\3\2\5/' 文件
（4）a:在指定行后追加文本------->2iYY------>将第二行之前添加本行
（5）i:在指定行之前插入文本---->2aYY----->将第二行之后添加文本
（6）c:替换指定的行-------->2cYY----->将第二行的内容修改为YY
6、导出与导入
r:读取文件--------->可以加在文件内，表示在哪里读取
'2r b.txt'第二行之后插入b.txt
w:保存文件--------->可以加在文件内，表示从哪里保存
'3w a.txt' /etc/passwd   将/etc/passwd第三行保存到a.txt
7、复制、剪切
模式空间（内存）
保存空间:作用类似于剪切板（默认有个回车键   换行符\n）
H:从上往下复制----->追加
G:从下往上复制----->追加
h:从上往下复制----->覆盖----->覆盖的是保持模式的默认回车
g:从下往上复制----->覆盖----->覆盖的是量
       3H；5G     3H；5g     3h;5G       3h;5g
           1              1             1              1
           2              2            2              2
           3              3            3              3
           4              4            4              4
           5                           5              3
                          3            3              6
           3              6            6                
           6

 
